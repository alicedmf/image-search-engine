[{"/Users/Alice/Documents/GitHub/image-search-engine/src/index.js":"1","/Users/Alice/Documents/GitHub/image-search-engine/src/reportWebVitals.js":"2","/Users/Alice/Documents/GitHub/image-search-engine/src/App.js":"3","/Users/Alice/Documents/GitHub/image-search-engine/src/components/resultsDisplay/resultsDisplay.js":"4","/Users/Alice/Documents/GitHub/image-search-engine/src/components/searchBar/searchBar.js":"5","/Users/Alice/Documents/GitHub/image-search-engine/src/components/resultsDisplay/ResultsDisplay.js":"6","/Users/Alice/Documents/GitHub/image-search-engine/src/components/searchBar/SearchBar.js":"7"},{"size":217,"mtime":1672501798115,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1671705857270,"results":"10","hashOfConfig":"11"},{"size":440,"mtime":1672582494120,"results":"12","hashOfConfig":"9"},{"size":1154,"mtime":1672135664611,"results":"13","hashOfConfig":"9"},{"size":1190,"mtime":1672135861493,"results":"14","hashOfConfig":"9"},{"size":813,"mtime":1672582433108,"results":"15","hashOfConfig":"9"},{"size":1490,"mtime":1672583152442,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ystszh",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"efxixq",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"/Users/Alice/Documents/GitHub/image-search-engine/src/index.js",[],[],"/Users/Alice/Documents/GitHub/image-search-engine/src/reportWebVitals.js",[],[],"/Users/Alice/Documents/GitHub/image-search-engine/src/App.js",["39"],[],"/Users/Alice/Documents/GitHub/image-search-engine/src/components/resultsDisplay/resultsDisplay.js",[],[],"/Users/Alice/Documents/GitHub/image-search-engine/src/components/searchBar/searchBar.js",["40","41"],[],"/Users/Alice/Documents/GitHub/image-search-engine/src/components/resultsDisplay/ResultsDisplay.js",["42"],[],"/Users/Alice/Documents/GitHub/image-search-engine/src/components/searchBar/SearchBar.js",["43","44"],[],"import React from 'react';\nimport axios from 'axios';\nimport ImageList from '@material-ui/core/ImageList';\nimport ResultsDisplay from '../resultsDisplay/ResultsDisplay';\nimport { useState } from 'react';\n\nfunction SearchBar() {\n    const [query, setQuery] = useState(\"\");\n    const [pics, setPics] = useState([]);\n    const searchImages = async (e) => {\n        e.preventDefault();\n        var API_KEY = '32265864-051f1f4a77558a7656ff80c35';\n        var url = `https://pixabay.com/api/?key=${API_KEY}&q=${query}`;\n        if(query != \"\") {\n            axios.get(url).then(response => { const results = response.data.hits; setPics(results); });\n        } else {\n            setPics([]);\n        }\n    };\n    return (\n        <div class=\"object-center\">\n            <form className=\"form\" onSubmit={searchImages}>\n                <div style={{ padding: '50px' }}>\n                    <input class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        type=\"text\" name=\"searchText\"\n                        className=\"input\"\n                        value={query}\n                        onChange={(e) => setQuery(e.target.value)} />\n                    <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" type=\"submit\" > Search </button>\n                </div>\n            </form>\n            {ResultsDisplay(pics)}\n        </div>\n    )\n}\n\n\nexport default SearchBar;",{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":22},{"ruleId":"45","severity":1,"message":"49","line":35,"column":16,"nodeType":"47","messageId":"48","endLine":35,"endColumn":29},{"ruleId":"45","severity":1,"message":"50","line":36,"column":9,"nodeType":"47","messageId":"48","endLine":36,"endColumn":15},{"ruleId":"51","severity":1,"message":"52","line":8,"column":21,"nodeType":"53","messageId":"54","endLine":8,"endColumn":23},{"ruleId":"45","severity":1,"message":"55","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":17},{"ruleId":"51","severity":1,"message":"56","line":14,"column":18,"nodeType":"53","messageId":"54","endLine":14,"endColumn":20},"no-unused-vars","'ResultsDisplay' is defined but never used.","Identifier","unusedVar","'displayImages' is defined but never used.","'images' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ImageList' is defined but never used.","Expected '!==' and instead saw '!='."]